{"version":3,"file":"Checkbox.stories-aa7f0f95.js","sources":["../../src/components/Checkbox/Checkbox.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport './checkbox.css'\n\n/**\n * Checkbox 컴포넌트의 props입니다.\n */\nexport interface CheckboxProps {\n  /** 컴포넌트가 마운트 될 때 포커스를 받는지 여부 */\n  autoFocus?: boolean\n  /** 체크박스가 선택되어 있는지 여부를 지정합니다. */\n  checked?: boolean\n  /** 체크박스를 비활성화하는 경우 */\n  disabled?: boolean\n  /** 체크박스의 중간 선택 상태 */\n  indeterminate?: boolean\n  /** 상태가 변경될 때 트리거되는 콜백 함수 */\n  onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void\n  children?: React.ReactNode\n  name?: string\n}\n\n/**\n * 체크박스 컴포넌트입니다.\n *\n * ## 언제 사용하나요?\n * - 여러 옵션에서 여러 값을 선택하는 데 사용됩니다.\n * - Switch는 상태 변경을 직접 트리거하지만, Checkbox는 상태를 변경된 것으로 표시하고 이를 제출해야 합니다.\n *\n * ```js\n * import { Checkbox } from \"grida\";\n * ```\n */\nexport default function Checkbox({ autoFocus, name, checked, disabled, children }: CheckboxProps) {\n  const [check, setCheck] = useState(checked)\n  return (\n    <label className=\"container\" htmlFor={name}>\n      <input\n        id={name}\n        name={name}\n        type=\"checkbox\"\n        className=\"checkbox\"\n        autoFocus={autoFocus}\n        checked={check || checked}\n        disabled={!!disabled}\n        onChange={(e) => setCheck(e.target.checked)}\n      />\n      <span className=\"checkbox-content\">{children}</span>\n    </label>\n  )\n}\n"],"names":["Checkbox","autoFocus","name","checked","disabled","children","check","setCheck","useState","jsxs","jsx","e"],"mappings":"oIAgCA,SAAAA,EAAA,CAAA,UAAAC,EAAA,KAAAC,EAAA,QAAAC,EAAA,SAAAC,EAAA,SAAAC,GAAA,CACE,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAAL,CAAA,EACA,OAAAM,EAAA,QAAA,CAAA,UAAA,YAAA,QAAAP,EAAA,SAAA,CAEIQ,EAAA,QAAC,CAAA,GAAAR,EACK,KAAAA,EACJ,KAAA,WACK,UAAA,WACK,UAAAD,EACV,QAAAK,GAAAH,EACkB,SAAA,CAAA,CAAAC,EACN,SAAAO,GAAAJ,EAAAI,EAAA,OAAA,OAAA,CAC8B,CAAA,EAC5CD,EAAA,OAAA,CAAA,UAAA,mBAAA,SAAAL,CAAA,CAAA,CAC6C,CAAA,CAAA,CAGnD;;;;;;;;;;;;;;;;;;;;;"}