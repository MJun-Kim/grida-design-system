{"version":3,"file":"Slider.stories-c42e71ef.js","sources":["../../src/components/Slider/Slider.tsx"],"sourcesContent":["import './slider.css'\n\nimport React, { useEffect, useRef, useState } from 'react'\n\n/**\n * Slider 컴포넌트의 props입니다.\n */\nexport interface SliderProps {\n  /**\n   * 해당 컴포넌트가 그려질 때 최초로 포커스를 획득하는지 여부로 사용가능합니다.\n   * * 기본 값은 false입니다.\n   */\n  autoFocus?: boolean\n  /**\n   * 슬라이더 비활성화 속성입니다.\n   * * 기본 값은 false입니다.\n   */\n  disabled?: boolean\n  /**\n   * 슬라이더에 범위를 지정할 수 있습니다.\n   * 기본값은 false입니다.\n   */\n  // range?: boolean\n  /**\n   * 슬라이더의 값입니다.\n   * range가 false이면 number를 사용합니다.\n   * range가 true이면 [number, number]를 사용합니다.\n   * * 기본 값은 0 | [0, 0]입니다.\n   */\n  value?: number\n  /**\n   * 슬라이더의 기본값입니다.\n   * range가 false이면 number를 사용합니다.\n   * range가 true이면 [number, number]를 사용합니다.\n   * * 기본 값은 0 | [0, 0]입니다.\n   */\n  defaultValue?: number\n  /**\n   * 슬라이더가 값을 단계적으로 적용할 수 있는 세분성입니다.\n   * 0보다 커야 하며 (최대 - 최소)로 나눠야 합니다.\n   * 기본 값은 1입니다.\n   */\n  step?: number\n  /**\n   * 슬라이더가 슬라이드할 수 있는 최대값 설정하는 속성입니다.\n   * 최대값은 100입니다.\n   */\n  max?: number\n  /**\n   * 슬라이더가 슬라이드할 수 있는 최소값 설정하는 속성입니다.\n   * 최소값은 0입니다.\n   */\n  min?: number\n  /**\n   * 슬라이더 오른쪽에 숫자를 넣을 수 있는 input박스가 제공됩니다.\n   * 기본값은 false입니다.\n   */\n  inputNumber?: boolean\n  /**\n   * 슬라이더가 구성 요소를 리버스로 표현합니다.\n   * 기본값은 false입니다.\n   */\n  reverse?: boolean\n  /**\n   * 슬라이더가 수직으로 설정됩니다.\n   * 기본값은 false입니다.\n   */\n  vertical?: boolean\n  /**\n   * 사용자가 슬라이더 값을 변경할 때 호출되는 콜백 함수입니다.\n   */\n  onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void\n}\n\n/**\n * 현재 값과 간격을 범위로 표시하는 슬라이더 컴포넌트입니다.\n *\n * ## 언제 사용하나요?\n * - 범위의 값을 입력합니다.\n *\n * ```js\n * import { Slider } from \"grida\";\n * ```\n */\nexport default function Slider({\n  autoFocus = false,\n  disabled = false,\n  // range = false,\n  value,\n  defaultValue = 0,\n  step = 1,\n  max = 100,\n  min = 0,\n  inputNumber = false,\n  reverse = false,\n  vertical = false,\n  onChange,\n}: SliderProps) {\n  const ref = useRef<HTMLInputElement>(null)\n  const plusRef = useRef<HTMLInputElement>(null)\n  const [valueState, setValueState] = useState<number>(value ? value : defaultValue)\n  const [isDemical, setIsDemical] = useState<boolean>(false)\n\n  useEffect(() => {\n    if (!step) return\n\n    const strValue = step.toString() // 숫자 값을 문자열로 변환\n    if (strValue.indexOf('.') !== -1) {\n      // 소수점이 있는지 여부를 확인setIsDemical\n      setIsDemical(true)\n    }\n  }, [step])\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    handleValueChange(e)\n    onChange?.(e)\n  }\n\n  const handleValueChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const numValue = Number(e.target.value)\n    if (numValue > max) return\n    setValueState(Number(numValue))\n  }\n\n  const handleButtonPlusClick = (e: React.MouseEvent<HTMLDivElement>) => {\n    e.preventDefault()\n    ref.current?.focus()\n    if (valueState >= max) return\n    setValueState((prev) => prev + step)\n  }\n\n  const handleButtonMinusClick = (e: React.MouseEvent<HTMLDivElement>) => {\n    e.preventDefault()\n    ref.current?.focus()\n    if (valueState <= min) return\n    setValueState((prev) => prev - step)\n  }\n\n  return (\n    <div className=\"slider\">\n      <input\n        type=\"range\"\n        disabled={disabled}\n        autoFocus={autoFocus}\n        min={min}\n        max={max}\n        step={step}\n        value={isDemical ? valueState.toFixed(1) : valueState}\n        defaultValue={defaultValue}\n        onChange={handleChange}\n        className={`slider-range ${disabled ? 'slider-range-disabled' : ''} ${\n          vertical ? 'slider-range-vertical' : ''\n        }`}\n      />\n      {inputNumber && (\n        <div className={`slider-number`}>\n          <input\n            ref={ref}\n            type=\"number\"\n            value={isDemical ? valueState.toFixed(1) : valueState}\n            defaultValue={defaultValue}\n            min={min}\n            max={max}\n            step={step}\n            onChange={handleValueChange}\n            className={`slider-number-input`}\n          />\n          <div className=\"slider-number-button\">\n            <div\n              ref={plusRef}\n              className=\"slider-number-button-plus\"\n              onClick={handleButtonPlusClick}\n            >\n              +\n            </div>\n            <div className=\"slider-number-button-minus\" onClick={handleButtonMinusClick}>\n              -\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n"],"names":["Slider","autoFocus","disabled","value","defaultValue","step","max","min","inputNumber","reverse","vertical","onChange","ref","useRef","plusRef","valueState","setValueState","useState","isDemical","setIsDemical","useEffect","handleChange","e","handleValueChange","numValue","handleButtonPlusClick","_a","prev","handleButtonMinusClick","jsxs","jsx"],"mappings":"+HAoFA,SAAAA,EAAA,CAA+B,UAAAC,EAAA,GACjB,SAAAC,EAAA,GACD,MAAAC,EAEX,aAAAC,EAAA,EACe,KAAAC,EAAA,EACR,IAAAC,EAAA,IACD,IAAAC,EAAA,EACA,YAAAC,EAAA,GACQ,QAAAC,EAAA,GACJ,SAAAC,EAAA,GACC,SAAAC,CAEb,EAAA,CACE,MAAAC,EAAAC,SAAA,IAAA,EACAC,EAAAD,SAAA,IAAA,EACA,CAAAE,EAAAC,CAAA,EAAAC,EAAA,SAAAd,GAAAC,CAAA,EACA,CAAAc,EAAAC,CAAA,EAAAF,EAAA,SAAA,EAAA,EAEAG,EAAAA,UAAA,IAAA,CACE,GAAA,CAAAf,EAAW,OAEXA,EAAA,WACA,QAAA,GAAA,IAAA,IAEEc,EAAA,EAAA,CACF,EAAA,CAAAd,CAAA,CAAA,EAGF,MAAAgB,EAAAC,GAAA,CACEC,EAAAD,CAAA,EACAX,GAAA,MAAAA,EAAAW,EAAY,EAGdC,EAAAD,GAAA,CACE,MAAAE,EAAA,OAAAF,EAAA,OAAA,KAAA,EACAE,EAAAlB,GACAU,EAAA,OAAAQ,CAAA,CAAA,CAA8B,EAGhCC,EAAAH,GAAA,OACEA,EAAA,eAAA,GACAI,EAAAd,EAAA,UAAA,MAAAc,EAAA,QACA,EAAAX,GAAAT,IACAU,EAAAW,GAAAA,EAAAtB,CAAA,CAAmC,EAGrCuB,EAAAN,GAAA,OACEA,EAAA,eAAA,GACAI,EAAAd,EAAA,UAAA,MAAAc,EAAA,QACA,EAAAX,GAAAR,IACAS,EAAAW,GAAAA,EAAAtB,CAAA,CAAmC,EAGrC,OAAAwB,EAAA,MAAA,CAAA,UAAA,SAAA,SAAA,CAEIC,EAAA,QAAC,CAAA,KAAA,QACM,SAAA5B,EACL,UAAAD,EACA,IAAAM,EACA,IAAAD,EACA,KAAAD,EACA,MAAAa,EAAAH,EAAA,QAAA,CAAA,EAAAA,EAC2C,aAAAX,EAC3C,SAAAiB,EACU,UAAA,gBAAAnB,EAAA,wBAAA,MAAAQ,EAAA,wBAAA,IAE6B,CAAA,EAEzCF,GAAAqB,EAAA,MAAA,CAAA,UAAA,gBAAA,SAAA,CAGIC,EAAA,QAAC,CAAA,IAAAlB,EACC,KAAA,SACK,MAAAM,EAAAH,EAAA,QAAA,CAAA,EAAAA,EACsC,aAAAX,EAC3C,IAAAG,EACA,IAAAD,EACA,KAAAD,EACA,SAAAkB,EACU,UAAA,qBACC,CAAA,EACbM,EAAA,MAAA,CAAA,UAAA,uBAAA,SAAA,CAEEC,EAAA,MAAC,CAAA,IAAAhB,EACM,UAAA,4BACK,QAAAW,EACD,SAAA,GACV,CAAA,EAEDK,EAAA,MAAA,CAAA,UAAA,6BAAA,QAAAF,EAAA,SAAA,IAAA,CAGA,EAAA,CACF,EAAA,CACF,CAAA,CAAA,CAIR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}