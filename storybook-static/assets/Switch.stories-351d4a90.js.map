{"version":3,"file":"Switch.stories-351d4a90.js","sources":["../../src/components/Switch/Switch.tsx"],"sourcesContent":["import './switch.css'\n\nimport React, { useState } from 'react'\n\n/**\n * Switch 컴포넌트의 props입니다.\n */\nexport interface SwitchProps {\n  /**\n   * 해당 컴포넌트가 그려질 때 최초로 포커스를 획득하는지 여부로 사용가능합니다.\n   * 기본 값은 false입니다.\n   */\n  autoFocus?: boolean\n  /**\n   * 스위치 선택 여부 확인하는 속성입니다.\n   * 기본 값은 false입니다.\n   */\n  checked?: boolean\n  /**\n   * 상태 확인 시 표시되는 콘텐츠입니다.\n   */\n  checkedChildren?: React.ReactNode\n  /**\n   * 스위치 비활성화 속성입니다.\n   * 기본 값은 false입니다.\n   */\n  disabled?: boolean\n  /**\n   * 스위치의 크기를 선택하는 속성입니다.\n   * 옵션 : small, medium\n   * 기본값은 small입니다.\n   */\n  size?: 'small' | 'medium'\n  /**\n   * 상태가 선택 취소되었을 때 표시할 콘텐츠입니다.\n   */\n  unCheckedChildren?: React.ReactNode\n  /**\n   * Switch 클릭 할 때 트리거입니다.\n   */\n  onClick?: (checked: boolean, event: React.MouseEvent<HTMLButtonElement>) => void\n}\n\n/**\n * 전환 선택기입니다.\n *\n * ## 언제 사용하나요?\n * - 두 상태 또는 켜기-끄기 상태 사이의 전환을 표현해야 하는 경우 사용합니다.\n * - 스위치와 체크박스의 차이점은 스위치는 토글할 때 상태 변경을 바로 트리거하는 반면, 체크박스는 일반적으로 제출 작업과 함께 작동해야 하는 상태 표시용으로 사용된다는 점입니다.\n *\n * ```js\n * import { Switch } from \"grida\";\n * ```\n */\nexport default function Switch({\n  autoFocus = false,\n  checked = false,\n  checkedChildren,\n  unCheckedChildren,\n  disabled = false,\n  size = 'small',\n  onClick,\n}: SwitchProps) {\n  const [isToggle, setToggle] = useState<boolean>(checked)\n\n  const handleClick = (e: React.MouseEvent<HTMLButtonElement>) => {\n    setToggle((prev) => !prev)\n    onClick?.(isToggle, e)\n  }\n\n  return (\n    <button\n      type=\"button\"\n      role=\"switch\"\n      autoFocus={autoFocus}\n      aria-checked={isToggle}\n      onClick={handleClick}\n      disabled={disabled}\n      className={`switch ${disabled ? 'switch-disabled' : ''} ${\n        isToggle ? 'switch-on' : 'switch-off'\n      } ${size === 'medium' ? 'switch-size-medium' : ''}`}\n    >\n      <div\n        className={`switch-handle ${isToggle ? 'switch-handle-on' : ''} ${\n          size === 'medium' ? 'switch-handle-medium' : ''\n        }`}\n      />\n      <span\n        className={`switch-inner ${isToggle ? 'switch-inner-on' : ''} ${\n          size === 'medium' ? 'switch-inner-medium' : ''\n        }`}\n      >\n        {isToggle ? checkedChildren : unCheckedChildren}\n      </span>\n    </button>\n  )\n}\n"],"names":["Switch","autoFocus","checked","checkedChildren","unCheckedChildren","disabled","size","onClick","isToggle","setToggle","useState","jsxs","e","prev","jsx"],"mappings":"oIAsDA,SAAAA,EAAA,CAA+B,UAAAC,EAAA,GACjB,QAAAC,EAAA,GACF,gBAAAC,EACV,kBAAAC,EACA,SAAAC,EAAA,GACW,KAAAC,EAAA,QACJ,QAAAC,CAET,EAAA,CACE,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAAR,CAAA,EAOA,OAAAS,EACE,SAAC,CAAA,KAAA,SACM,KAAA,SACA,UAAAV,EACL,eAAAO,EACc,QAVlBI,GAAA,CACEH,EAAAI,GAAA,CAAAA,CAAA,EACAN,GAAA,MAAAA,EAAAC,EAAAI,EAAqB,EASV,SAAAP,EACT,UAAA,UAAAA,EAAA,kBAAA,MAAAG,EAAA,YAAA,gBAAAF,IAAA,SAAA,qBAAA,KAG+C,SAAA,CAE/CQ,EAAA,MAAC,CAAA,UAAA,iBAAAN,EAAA,mBAAA,MAAAF,IAAA,SAAA,uBAAA,IAEgD,CAAA,EAEjDQ,EACA,OAAC,CAAA,UAAA,gBAAAN,EAAA,kBAAA,MAAAF,IAAA,SAAA,sBAAA,KAE+C,SAAAE,EAAAL,EAAAC,CAGhB,CAAA,CAChC,CAAA,CAAA,CAGN;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}