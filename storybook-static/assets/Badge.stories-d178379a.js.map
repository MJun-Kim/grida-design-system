{"version":3,"file":"Badge.stories-d178379a.js","sources":["../../src/components/Badge/Badge.tsx"],"sourcesContent":["import './badge.css'\n\nexport interface BadgeProps {\n  /**\n   * 배지 도트 색상을 사용자 정의할 수 있습니다.\n   */\n  color?: string\n  /**\n   * 배지에 표시할 숫자입니다.\n   */\n  count?: React.ReactNode\n  /**\n   * 숫자 대신 빨간색 도트를 표시할지 여부입니다.\n   */\n  dot?: boolean\n  /**\n   * 배지 도트의 위치를 설정합니다.\n   */\n  offset?: [number, number]\n  /**\n   * 배지에 표시할 수 있는 최대 숫자입니다.\n   */\n  overflowCount?: number\n  /**\n   * 숫자가 0일 때 배지를 표시할지 여부입니다.\n   */\n  showZero?: boolean\n  /**\n   * count 속성이 설정되면, 크기는 배지의 크기를 설정합니다.\n   */\n  size?: 'default' | 'small'\n  /**\n   * 배지를 상태 점으로 설정합니다.\n   */\n  status?: '' | 'success' | 'processing' | 'default' | 'error' | 'warning'\n  /**\n   * 상태가 설정되면, 텍스트는 상태 점의 표시 텍스트를 설정합니다.\n   */\n  text?: React.ReactNode\n  /**\n   * 배지 위에 마우스를 올렸을 때 표시할 텍스트입니다.\n   */\n  title?: string\n}\n\nconst BADGE_STATUS = {\n  success: { style: 'badge-success', content: 'Success' },\n  error: { style: 'badge-error', content: 'Error' },\n  default: { style: 'badge-default', content: 'Default' },\n  warning: { style: 'badge-warning', content: 'Warning' },\n  processing: { style: 'badge-processing', content: 'Processing' },\n} as const\n\nexport default function Badge({\n  color = '#F26460',\n  count = '1',\n  dot = false,\n  overflowCount = 99,\n  showZero = false,\n  size = 'default',\n  status,\n  text,\n}: BadgeProps) {\n  const badgeStatus = status ? BADGE_STATUS[status] : null\n\n  return badgeStatus ? (\n    <div className={`badge-status ${badgeStatus.style}`}>\n      <div className={'badge-dot'}></div>\n      <span className={'badge-text'} style={{ color: 'rgba(0, 0, 0, 0.87)' }}>\n        {badgeStatus.content || text}\n      </span>\n    </div>\n  ) : dot ? (\n    <div className={`badge-dot`} style={{ backgroundColor: `${color}` }}></div>\n  ) : (\n    <div className={`badge badge-size-${size}`} style={{ backgroundColor: `${color}` }}>\n      <span className={`badge-text`}>\n        {showZero\n          ? Number(count) > Number(overflowCount)\n            ? `${overflowCount}+`\n            : count || 0\n          : Number(count) > Number(overflowCount)\n          ? `${overflowCount}+`\n          : count || ''}\n      </span>\n    </div>\n  )\n}\n"],"names":["BADGE_STATUS","Badge","color","count","dot","overflowCount","showZero","size","status","text","badgeStatus","jsxs","jsx"],"mappings":"wHA6CA,MAAAA,EAAA,CAAqB,QAAA,CAAA,MAAA,gBAAA,QAAA,SAAA,EACmC,MAAA,CAAA,MAAA,cAAA,QAAA,OAAA,EACN,QAAA,CAAA,MAAA,gBAAA,QAAA,SAAA,EACM,QAAA,CAAA,MAAA,gBAAA,QAAA,SAAA,EACA,WAAA,CAAA,MAAA,mBAAA,QAAA,YAAA,CAExD,EAEA,SAAAC,EAAA,CAA8B,MAAAC,EAAA,UACpB,MAAAC,EAAA,IACA,IAAAC,EAAA,GACF,cAAAC,EAAA,GACU,SAAAC,EAAA,GACL,KAAAC,EAAA,UACJ,OAAAC,EACP,KAAAC,CAEF,EAAA,CACE,MAAAC,EAAAF,EAAAR,EAAAQ,CAAA,EAAA,KAEA,OAAAE,EAAAC,EAAA,MAAA,CAAA,UAAA,gBAAAD,EAAA,QAAA,SAAA,CAEIE,EAAA,MAAA,CAAA,UAAA,WAAA,CAAA,EAA6BA,EAAA,OAAA,CAAA,UAAA,aAAA,MAAA,CAAA,MAAA,qBAAA,EAAA,SAAAF,EAAA,SAAAD,CAAA,CAAA,CAG7B,CAAA,CAAA,EAAAL,EAAAQ,EAAA,MAAA,CAAA,UAAA,YAAA,MAAA,CAAA,gBAAA,GAAAV,GAAA,CAAA,CAAA,EAAAU,EAAA,MAAA,CAAA,UAAA,oBAAAL,IAAA,MAAA,CAAA,gBAAA,GAAAL,GAAA,EAAA,SAAAU,EAAA,OAAA,CAAA,UAAA,aAAA,SAAAN,EAAA,OAAAH,CAAA,EAAA,OAAAE,CAAA,EAAA,GAAAA,KAAAF,GAAA,EAAA,OAAAA,CAAA,EAAA,OAAAE,CAAA,EAAA,GAAAA,KAAAF,GAAA,EAAA,CAAA,CAAA,CAAA,CAiBN;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}