{"version":3,"file":"Tag.stories-85957ff7.js","sources":["../../src/components/Tag/Tag.tsx"],"sourcesContent":["import './tag.css'\n\nimport React from 'react'\nimport {\n  AiFillCheckCircle as SuccessIcon,\n  AiFillCloseCircle as ErrorIcon,\n  AiFillInfoCircle as InfoIcon,\n  AiFillWarning as WarningIcon,\n  AiOutlineClose as CloseIcon,\n  AiOutlineSmile as PrimaryIcon,\n} from 'react-icons/ai'\n\n/**\n * Tag 컴포넌트의 props입니다.\n */\nexport interface TagProps {\n  /**\n   * Tag를 닫을 수 있는지 여부입니다.\n   */\n  closable?: boolean\n  /**\n   * 사용자 정의 닫기 아이콘입니다.\n   * closable이 true일때만 사용가능합니다.\n   */\n  closeIcon?: React.ReactNode\n  /**\n   * 태그 색상을 지정할 수 있는 속성입니다.\n   */\n  color?: string\n  /**\n   * 태그 안 내용을 지정할 수 있는 속성입니다.\n   * type 속성보다 우선입니다.\n   */\n  text?: string\n  /**\n   * 사용자 정의 아이콘입니다.\n   */\n  icon?: React.ReactNode\n  /**\n   * Tag 스타일의 타입입니다.\n   * 옵션: default, primary, error, success, warning processing입니다.\n   * 기본값은 default입니다.\n   */\n  type?: 'default' | 'primary' | 'error' | 'success' | 'warning' | 'processing'\n  /**\n   * Tag가 닫힐 때 호출되는 콜백 함수입니다.\n   */\n  onClose?: (e: React.MouseEvent) => void\n  /**\n   * Tag의 크기입니다.\n   * 옵션: small, medium, large, xlarge입니다.\n   * 기본 값은 small입니다.\n   */\n  size?: 'small' | 'medium' | 'large'\n}\n\nconst TAG_TYPE = {\n  default: { style: 'tag-default', icon: PrimaryIcon },\n  primary: { style: 'tag-primary', icon: PrimaryIcon },\n  error: { style: 'tag-error', icon: ErrorIcon },\n  success: { style: 'tag-success', icon: SuccessIcon },\n  warning: { style: 'tag-warning', icon: WarningIcon },\n  processing: { style: 'tag-processing', icon: InfoIcon },\n} as const\n\n/**\n * 분류 또는 마크업을 위한 태그입니다.\n *\n * ## 언제 사용하나요?\n * - 차원 또는 속성별로 태그를 지정하는 데 사용할 수 있습니다.\n * - 분류할 때 사용할 수 있습니다.\n *\n * ```js\n * import { Tag } from \"grida\";\n * ```\n */\nexport default function Tag({\n  closable,\n  closeIcon,\n  color,\n  text,\n  icon,\n  type = 'default',\n  onClose,\n  size = 'small',\n}: TagProps) {\n  const tagType = TAG_TYPE[type]\n  const colorAlpha: string = color + '1A'\n\n  const handleClick = (e: React.MouseEvent) => {\n    onClose?.(e)\n  }\n\n  return (\n    <div\n      style={color ? { background: colorAlpha } : undefined}\n      className={`tag ${tagType.style} ${\n        size === 'large' ? 'tag-large' : size === 'medium' ? 'tag-medium' : 'tag-small'\n      }`}\n    >\n      <section className=\"icon-section\">\n        {icon &&\n          (React.isValidElement(icon) ? (\n            React.cloneElement(icon as React.ReactElement, {\n              style: { color: color },\n              className: 'icon',\n            })\n          ) : (\n            <tagType.icon className=\"icon\" />\n          ))}\n      </section>\n      <section className=\"tag-text\">\n        <span style={{ color: color }} className=\"text\">\n          {text}\n        </span>\n      </section>\n      <section className=\"close-section\">\n        {closable && (\n          <button className=\"cursor-pointer\" onClick={handleClick}>\n            {React.isValidElement(closeIcon) ? (\n              React.cloneElement(closeIcon as React.ReactElement, {\n                style: { color: color },\n                className: 'icon',\n              })\n            ) : (\n              <CloseIcon style={{ color }} />\n            )}\n          </button>\n        )}\n      </section>\n    </div>\n  )\n}\n"],"names":["TAG_TYPE","PrimaryIcon","ErrorIcon","SuccessIcon","WarningIcon","InfoIcon","Tag","closable","closeIcon","color","text","icon","type","onClose","size","tagType","colorAlpha","handleClick","e","jsxs","jsx","React","CloseIcon"],"mappings":"0NAwDA,MAAAA,EAAA,CAAiB,QAAA,CAAA,MAAA,cAAA,KAAAC,CAAA,EACoC,QAAA,CAAA,MAAA,cAAA,KAAAA,CAAA,EACA,MAAA,CAAA,MAAA,YAAA,KAAAC,CAAA,EACN,QAAA,CAAA,MAAA,cAAA,KAAAC,CAAA,EACM,QAAA,CAAA,MAAA,cAAA,KAAAC,CAAA,EACA,WAAA,CAAA,MAAA,iBAAA,KAAAC,CAAA,CAErD,EAaA,SAAAC,EAAA,CAA4B,SAAAC,EAC1B,UAAAC,EACA,MAAAC,EACA,KAAAC,EACA,KAAAC,EACA,KAAAC,EAAA,UACO,QAAAC,EACP,KAAAC,EAAA,OAEF,EAAA,CACE,MAAAC,EAAAf,EAAAY,CAAA,EACAI,EAAAP,EAAA,KAEAQ,EAAAC,GAAA,CACEL,GAAA,MAAAA,EAAAK,EAAW,EAGb,OAAAC,EACE,MAAC,CAAA,MAAAV,EAAA,CAAA,WAAAO,CAAA,EAAA,OAC6C,UAAA,OAAAD,EAAA,SAAAD,IAAA,QAAA,YAAAA,IAAA,SAAA,aAAA,cAE0B,SAAA,CAGtEM,EAAA,UAAA,CAAA,UAAA,eAAA,SAAAT,IAAAU,EAAA,eAAAV,CAAA,EAAAU,EAAA,aAAAV,EAAA,CAGqD,MAAA,CAAA,MAAAF,CAAA,EACvB,UAAA,MACX,CAAA,EAAAW,EAAAL,EAAA,KAAA,CAAA,UAAA,MAAA,CAAA,GAAA,EAKnBK,EAAA,UAAA,CAAA,UAAA,WAAA,SAAAA,EAAA,OAAA,CAAA,MAAA,CAAA,MAAAX,CAAA,EAAA,UAAA,OAAA,SAAAC,CAAA,CAAA,EAAA,EAKAU,EAAA,UAAA,CAAA,UAAA,gBAAA,SAAAb,GAAAa,EAAA,SAAA,CAAA,UAAA,iBAAA,QAAAH,EAAA,SAAAI,EAAA,eAAAb,CAAA,EAAAa,EAAA,aAAAb,EAAA,CAK4D,MAAA,CAAA,MAAAC,CAAA,EAC5B,UAAA,MACX,CAAA,EAAAW,EAAAE,EAAA,CAAA,MAAA,CAAA,MAAAb,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAOrB,CAAA,CAAA,CAGN;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}